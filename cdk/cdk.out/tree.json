{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "InfrastructureStack": {
        "id": "InfrastructureStack",
        "path": "InfrastructureStack",
        "children": {
          "MyVpc": {
            "id": "MyVpc",
            "path": "InfrastructureStack/MyVpc",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "InfrastructureStack/MyVpc/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "InfrastructureStack/MyVpc"
                      }
                    ]
                  }
                }
              },
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "InfrastructureStack/MyVpc/PublicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "InfrastructureStack/MyVpc/PublicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/18",
                        "vpcId": {
                          "Ref": "MyVpcF9F0CA6F"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "InfrastructureStack/MyVpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "InfrastructureStack/MyVpc/PublicSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "InfrastructureStack/MyVpc/PublicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "MyVpcF9F0CA6F"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "InfrastructureStack/MyVpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "InfrastructureStack/MyVpc/PublicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyVpcPublicSubnet1RouteTableC46AB2F4"
                        },
                        "subnetId": {
                          "Ref": "MyVpcPublicSubnet1SubnetF6608456"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "InfrastructureStack/MyVpc/PublicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyVpcPublicSubnet1RouteTableC46AB2F4"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "MyVpcIGW5C4A4F63"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "InfrastructureStack/MyVpc/PublicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "InfrastructureStack/MyVpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "InfrastructureStack/MyVpc/PublicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "MyVpcPublicSubnet1EIP096967CB",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "MyVpcPublicSubnet1SubnetF6608456"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "InfrastructureStack/MyVpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "InfrastructureStack/MyVpc/PublicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "InfrastructureStack/MyVpc/PublicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.64.0/18",
                        "vpcId": {
                          "Ref": "MyVpcF9F0CA6F"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "InfrastructureStack/MyVpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "InfrastructureStack/MyVpc/PublicSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "InfrastructureStack/MyVpc/PublicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "MyVpcF9F0CA6F"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "InfrastructureStack/MyVpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "InfrastructureStack/MyVpc/PublicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyVpcPublicSubnet2RouteTable1DF17386"
                        },
                        "subnetId": {
                          "Ref": "MyVpcPublicSubnet2Subnet492B6BFB"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "InfrastructureStack/MyVpc/PublicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyVpcPublicSubnet2RouteTable1DF17386"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "MyVpcIGW5C4A4F63"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "InfrastructureStack/MyVpc/PublicSubnet2/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "InfrastructureStack/MyVpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "InfrastructureStack/MyVpc/PublicSubnet2/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "MyVpcPublicSubnet2EIP8CCBA239",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "MyVpcPublicSubnet2Subnet492B6BFB"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "InfrastructureStack/MyVpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PrivateSubnet1": {
                "id": "PrivateSubnet1",
                "path": "InfrastructureStack/MyVpc/PrivateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "InfrastructureStack/MyVpc/PrivateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.128.0/18",
                        "vpcId": {
                          "Ref": "MyVpcF9F0CA6F"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "InfrastructureStack/MyVpc/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "InfrastructureStack/MyVpc/PrivateSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "InfrastructureStack/MyVpc/PrivateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "MyVpcF9F0CA6F"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "InfrastructureStack/MyVpc/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "InfrastructureStack/MyVpc/PrivateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyVpcPrivateSubnet1RouteTable8819E6E2"
                        },
                        "subnetId": {
                          "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "InfrastructureStack/MyVpc/PrivateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyVpcPrivateSubnet1RouteTable8819E6E2"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "MyVpcPublicSubnet1NATGatewayAD3400C1"
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet2": {
                "id": "PrivateSubnet2",
                "path": "InfrastructureStack/MyVpc/PrivateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "InfrastructureStack/MyVpc/PrivateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.192.0/18",
                        "vpcId": {
                          "Ref": "MyVpcF9F0CA6F"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "InfrastructureStack/MyVpc/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "InfrastructureStack/MyVpc/PrivateSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "InfrastructureStack/MyVpc/PrivateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "MyVpcF9F0CA6F"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "InfrastructureStack/MyVpc/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "InfrastructureStack/MyVpc/PrivateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyVpcPrivateSubnet2RouteTableCEDCEECE"
                        },
                        "subnetId": {
                          "Ref": "MyVpcPrivateSubnet2Subnet0040C983"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "InfrastructureStack/MyVpc/PrivateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyVpcPrivateSubnet2RouteTableCEDCEECE"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "MyVpcPublicSubnet2NATGateway91BFBEC9"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "InfrastructureStack/MyVpc/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "InfrastructureStack/MyVpc"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "InfrastructureStack/MyVpc/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "MyVpcF9F0CA6F"
                    },
                    "internetGatewayId": {
                      "Ref": "MyVpcIGW5C4A4F63"
                    }
                  }
                }
              }
            }
          },
          "my-cloudfront-s3": {
            "id": "my-cloudfront-s3",
            "path": "InfrastructureStack/my-cloudfront-s3",
            "children": {
              "S3LoggingBucket": {
                "id": "S3LoggingBucket",
                "path": "InfrastructureStack/my-cloudfront-s3/S3LoggingBucket",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfrastructureStack/my-cloudfront-s3/S3LoggingBucket/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                      "aws:cdk:cloudformation:props": {
                        "accessControl": "LogDeliveryWrite",
                        "bucketEncryption": {
                          "serverSideEncryptionConfiguration": [
                            {
                              "serverSideEncryptionByDefault": {
                                "sseAlgorithm": "AES256"
                              }
                            }
                          ]
                        },
                        "publicAccessBlockConfiguration": {
                          "blockPublicAcls": true,
                          "blockPublicPolicy": true,
                          "ignorePublicAcls": true,
                          "restrictPublicBuckets": true
                        },
                        "versioningConfiguration": {
                          "status": "Enabled"
                        }
                      }
                    }
                  },
                  "Notifications": {
                    "id": "Notifications",
                    "path": "InfrastructureStack/my-cloudfront-s3/S3LoggingBucket/Notifications"
                  },
                  "Policy": {
                    "id": "Policy",
                    "path": "InfrastructureStack/my-cloudfront-s3/S3LoggingBucket/Policy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "InfrastructureStack/my-cloudfront-s3/S3LoggingBucket/Policy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                          "aws:cdk:cloudformation:props": {
                            "bucket": {
                              "Ref": "mycloudfronts3S3LoggingBucket7A493C5D"
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "*",
                                  "Condition": {
                                    "Bool": {
                                      "aws:SecureTransport": "false"
                                    }
                                  },
                                  "Effect": "Deny",
                                  "Principal": "*",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        {
                                          "Fn::GetAtt": [
                                            "mycloudfronts3S3LoggingBucket7A493C5D",
                                            "Arn"
                                          ]
                                        },
                                        "/*"
                                      ]
                                    ]
                                  },
                                  "Sid": "HttpsOnly"
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "S3Bucket": {
                "id": "S3Bucket",
                "path": "InfrastructureStack/my-cloudfront-s3/S3Bucket",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfrastructureStack/my-cloudfront-s3/S3Bucket/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                      "aws:cdk:cloudformation:props": {
                        "bucketEncryption": {
                          "serverSideEncryptionConfiguration": [
                            {
                              "serverSideEncryptionByDefault": {
                                "sseAlgorithm": "AES256"
                              }
                            }
                          ]
                        },
                        "lifecycleConfiguration": {
                          "rules": [
                            {
                              "noncurrentVersionTransitions": [
                                {
                                  "storageClass": "GLACIER",
                                  "transitionInDays": 90
                                }
                              ],
                              "status": "Enabled"
                            }
                          ]
                        },
                        "loggingConfiguration": {
                          "destinationBucketName": {
                            "Ref": "mycloudfronts3S3LoggingBucket7A493C5D"
                          }
                        },
                        "publicAccessBlockConfiguration": {
                          "blockPublicAcls": true,
                          "blockPublicPolicy": true,
                          "ignorePublicAcls": true,
                          "restrictPublicBuckets": true
                        },
                        "versioningConfiguration": {
                          "status": "Enabled"
                        }
                      }
                    }
                  },
                  "Notifications": {
                    "id": "Notifications",
                    "path": "InfrastructureStack/my-cloudfront-s3/S3Bucket/Notifications"
                  },
                  "Policy": {
                    "id": "Policy",
                    "path": "InfrastructureStack/my-cloudfront-s3/S3Bucket/Policy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "InfrastructureStack/my-cloudfront-s3/S3Bucket/Policy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                          "aws:cdk:cloudformation:props": {
                            "bucket": {
                              "Ref": "mycloudfronts3S3BucketB6A57676"
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "*",
                                  "Condition": {
                                    "Bool": {
                                      "aws:SecureTransport": "false"
                                    }
                                  },
                                  "Effect": "Deny",
                                  "Principal": "*",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        {
                                          "Fn::GetAtt": [
                                            "mycloudfronts3S3BucketB6A57676",
                                            "Arn"
                                          ]
                                        },
                                        "/*"
                                      ]
                                    ]
                                  },
                                  "Sid": "HttpsOnly"
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*"
                                  ],
                                  "Effect": "Allow",
                                  "Principal": {
                                    "CanonicalUser": {
                                      "Fn::GetAtt": [
                                        "mycloudfronts3CloudFrontDistributionOrigin1S3Origin5F8AD679",
                                        "S3CanonicalUserId"
                                      ]
                                    }
                                  },
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "mycloudfronts3S3BucketB6A57676",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "mycloudfronts3S3BucketB6A57676",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "SetHttpSecurityHeadersServiceRole": {
                "id": "SetHttpSecurityHeadersServiceRole",
                "path": "InfrastructureStack/my-cloudfront-s3/SetHttpSecurityHeadersServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfrastructureStack/my-cloudfront-s3/SetHttpSecurityHeadersServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            },
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "edgelambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policies": [
                          {
                            "policyName": "LambdaFunctionServiceRolePolicy",
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":logs:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":log-group:/aws/lambda/*"
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "InfrastructureStack/my-cloudfront-s3/SetHttpSecurityHeadersServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "InfrastructureStack/my-cloudfront-s3/SetHttpSecurityHeadersServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "xray:PutTraceSegments",
                                    "xray:PutTelemetryRecords"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "mycloudfronts3SetHttpSecurityHeadersServiceRoleDefaultPolicyA137FA27",
                            "roles": [
                              {
                                "Ref": "mycloudfronts3SetHttpSecurityHeadersServiceRoleF7806C0A"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "SetHttpSecurityHeaders": {
                "id": "SetHttpSecurityHeaders",
                "path": "InfrastructureStack/my-cloudfront-s3/SetHttpSecurityHeaders",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfrastructureStack/my-cloudfront-s3/SetHttpSecurityHeaders/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "zipFile": "exports.handler = (event, context, callback) => {           const response = event.Records[0].cf.response;           const headers = response.headers;           headers['x-xss-protection'] = [             {               key: 'X-XSS-Protection',               value: '1; mode=block'             }           ];           headers['x-frame-options'] = [             {               key: 'X-Frame-Options',               value: 'DENY'             }           ];           headers['x-content-type-options'] = [             {               key: 'X-Content-Type-Options',               value: 'nosniff'             }           ];           headers['strict-transport-security'] = [             {               key: 'Strict-Transport-Security',               value: 'max-age=63072000; includeSubdomains; preload'             }           ];           headers['referrer-policy'] = [             {               key: 'Referrer-Policy',               value: 'same-origin'             }           ];           headers['content-security-policy'] = [             {               key: 'Content-Security-Policy',               value: \"default-src 'none'; base-uri 'self'; img-src 'self'; script-src 'self'; style-src 'self' https:; object-src 'none'; frame-ancestors 'none'; font-src 'self' https:; form-action 'self'; manifest-src 'self'; connect-src 'self'\"              }           ];           callback(null, response);         };"
                        },
                        "handler": "index.handler",
                        "role": {
                          "Fn::GetAtt": [
                            "mycloudfronts3SetHttpSecurityHeadersServiceRoleF7806C0A",
                            "Arn"
                          ]
                        },
                        "runtime": "nodejs12.x",
                        "tracingConfig": {
                          "mode": "Active"
                        }
                      }
                    }
                  }
                }
              },
              "SetHttpSecurityHeadersVersion": {
                "id": "SetHttpSecurityHeadersVersion",
                "path": "InfrastructureStack/my-cloudfront-s3/SetHttpSecurityHeadersVersion",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfrastructureStack/my-cloudfront-s3/SetHttpSecurityHeadersVersion/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Version",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "mycloudfronts3SetHttpSecurityHeadersA2C2B445"
                        }
                      }
                    }
                  }
                }
              },
              "CloudfrontLoggingBucket": {
                "id": "CloudfrontLoggingBucket",
                "path": "InfrastructureStack/my-cloudfront-s3/CloudfrontLoggingBucket",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfrastructureStack/my-cloudfront-s3/CloudfrontLoggingBucket/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                      "aws:cdk:cloudformation:props": {
                        "bucketEncryption": {
                          "serverSideEncryptionConfiguration": [
                            {
                              "serverSideEncryptionByDefault": {
                                "sseAlgorithm": "AES256"
                              }
                            }
                          ]
                        },
                        "publicAccessBlockConfiguration": {
                          "blockPublicAcls": true,
                          "blockPublicPolicy": true,
                          "ignorePublicAcls": true,
                          "restrictPublicBuckets": true
                        },
                        "versioningConfiguration": {
                          "status": "Enabled"
                        }
                      }
                    }
                  },
                  "Notifications": {
                    "id": "Notifications",
                    "path": "InfrastructureStack/my-cloudfront-s3/CloudfrontLoggingBucket/Notifications"
                  },
                  "Policy": {
                    "id": "Policy",
                    "path": "InfrastructureStack/my-cloudfront-s3/CloudfrontLoggingBucket/Policy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "InfrastructureStack/my-cloudfront-s3/CloudfrontLoggingBucket/Policy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                          "aws:cdk:cloudformation:props": {
                            "bucket": {
                              "Ref": "mycloudfronts3CloudfrontLoggingBucket94224AF0"
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "*",
                                  "Condition": {
                                    "Bool": {
                                      "aws:SecureTransport": "false"
                                    }
                                  },
                                  "Effect": "Deny",
                                  "Principal": "*",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        {
                                          "Fn::GetAtt": [
                                            "mycloudfronts3CloudfrontLoggingBucket94224AF0",
                                            "Arn"
                                          ]
                                        },
                                        "/*"
                                      ]
                                    ]
                                  },
                                  "Sid": "HttpsOnly"
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "CloudFrontDistribution": {
                "id": "CloudFrontDistribution",
                "path": "InfrastructureStack/my-cloudfront-s3/CloudFrontDistribution",
                "children": {
                  "Origin1": {
                    "id": "Origin1",
                    "path": "InfrastructureStack/my-cloudfront-s3/CloudFrontDistribution/Origin1",
                    "children": {
                      "S3Origin": {
                        "id": "S3Origin",
                        "path": "InfrastructureStack/my-cloudfront-s3/CloudFrontDistribution/Origin1/S3Origin",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "InfrastructureStack/my-cloudfront-s3/CloudFrontDistribution/Origin1/S3Origin/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
                              "aws:cdk:cloudformation:props": {
                                "cloudFrontOriginAccessIdentityConfig": {
                                  "comment": "Identity for InfrastructureStackmycloudfronts3CloudFrontDistributionOrigin13CBEB53C"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "InfrastructureStack/my-cloudfront-s3/CloudFrontDistribution/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CloudFront::Distribution",
                      "aws:cdk:cloudformation:props": {
                        "distributionConfig": {
                          "enabled": true,
                          "origins": [
                            {
                              "domainName": {
                                "Fn::GetAtt": [
                                  "mycloudfronts3S3BucketB6A57676",
                                  "RegionalDomainName"
                                ]
                              },
                              "id": "InfrastructureStackmycloudfronts3CloudFrontDistributionOrigin13CBEB53C",
                              "s3OriginConfig": {
                                "originAccessIdentity": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "origin-access-identity/cloudfront/",
                                      {
                                        "Ref": "mycloudfronts3CloudFrontDistributionOrigin1S3Origin5F8AD679"
                                      }
                                    ]
                                  ]
                                }
                              }
                            }
                          ],
                          "defaultCacheBehavior": {
                            "pathPattern": "*",
                            "targetOriginId": "InfrastructureStackmycloudfronts3CloudFrontDistributionOrigin13CBEB53C",
                            "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                            "compress": true,
                            "viewerProtocolPolicy": "redirect-to-https",
                            "lambdaFunctionAssociations": [
                              {
                                "lambdaFunctionArn": {
                                  "Ref": "mycloudfronts3SetHttpSecurityHeadersVersionB976FC42"
                                },
                                "eventType": "origin-response"
                              }
                            ]
                          },
                          "defaultRootObject": "index.html",
                          "httpVersion": "http2",
                          "ipv6Enabled": true,
                          "logging": {
                            "bucket": {
                              "Fn::GetAtt": [
                                "mycloudfronts3CloudfrontLoggingBucket94224AF0",
                                "DomainName"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "DeployS3Images": {
            "id": "DeployS3Images",
            "path": "InfrastructureStack/DeployS3Images",
            "children": {
              "CustomResourceHandler": {
                "id": "CustomResourceHandler",
                "path": "InfrastructureStack/DeployS3Images/CustomResourceHandler"
              },
              "Asset1": {
                "id": "Asset1",
                "path": "InfrastructureStack/DeployS3Images/Asset1",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "InfrastructureStack/DeployS3Images/Asset1/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "InfrastructureStack/DeployS3Images/Asset1/AssetBucket"
                  }
                }
              },
              "CustomResource": {
                "id": "CustomResource",
                "path": "InfrastructureStack/DeployS3Images/CustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "InfrastructureStack/DeployS3Images/CustomResource/Default"
                  }
                }
              }
            }
          },
          "Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C": {
            "id": "Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C",
            "path": "InfrastructureStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "InfrastructureStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfrastructureStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "InfrastructureStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "InfrastructureStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::",
                                          {
                                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                                          }
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::",
                                          {
                                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject*",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "mycloudfronts3S3BucketB6A57676",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "mycloudfronts3S3BucketB6A57676",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
                            "roles": [
                              {
                                "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Code": {
                "id": "Code",
                "path": "InfrastructureStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "InfrastructureStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "InfrastructureStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "InfrastructureStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      },
                      "s3Key": "c9ac4b3b65f3510a2088b7fd003de23d2aefac424025eb168725ce6769e3c176"
                    },
                    "handler": "index.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
                        "Arn"
                      ]
                    },
                    "runtime": "python3.6",
                    "timeout": 900
                  }
                }
              }
            }
          },
          "MyDatabase": {
            "id": "MyDatabase",
            "path": "InfrastructureStack/MyDatabase",
            "children": {
              "Subnets": {
                "id": "Subnets",
                "path": "InfrastructureStack/MyDatabase/Subnets",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "InfrastructureStack/MyDatabase/Subnets/Default",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::RDS::DBSubnetGroup",
                      "aws:cdk:cloudformation:props": {
                        "dbSubnetGroupDescription": "Subnets for MyDatabase database",
                        "subnetIds": [
                          {
                            "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E"
                          },
                          {
                            "Ref": "MyVpcPrivateSubnet2Subnet0040C983"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "Secret": {
                "id": "Secret",
                "path": "InfrastructureStack/MyDatabase/Secret",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfrastructureStack/MyDatabase/Secret/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SecretsManager::Secret",
                      "aws:cdk:cloudformation:props": {
                        "description": {
                          "Fn::Join": [
                            "",
                            [
                              "Generated by the CDK for stack: ",
                              {
                                "Ref": "AWS::StackName"
                              }
                            ]
                          ]
                        },
                        "generateSecretString": {
                          "passwordLength": 30,
                          "secretStringTemplate": "{\"username\":\"admin\"}",
                          "generateStringKey": "password",
                          "excludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
                        }
                      }
                    }
                  },
                  "Attachment": {
                    "id": "Attachment",
                    "path": "InfrastructureStack/MyDatabase/Secret/Attachment",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "InfrastructureStack/MyDatabase/Secret/Attachment/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::SecretsManager::SecretTargetAttachment",
                          "aws:cdk:cloudformation:props": {
                            "secretId": {
                              "Ref": "MyDatabaseSecret7865AF39"
                            },
                            "targetId": {
                              "Ref": "MyDatabase1E2517DB"
                            },
                            "targetType": "AWS::RDS::DBCluster"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "AuroraMySqlDatabaseClusterEngineDefaultParameterGroup": {
                "id": "AuroraMySqlDatabaseClusterEngineDefaultParameterGroup",
                "path": "InfrastructureStack/MyDatabase/AuroraMySqlDatabaseClusterEngineDefaultParameterGroup"
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "InfrastructureStack/MyDatabase/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfrastructureStack/MyDatabase/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "RDS security group",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "MyVpcF9F0CA6F"
                        }
                      }
                    }
                  },
                  "from 0.0.0.0_0:{IndirectPort}": {
                    "id": "from 0.0.0.0_0:{IndirectPort}",
                    "path": "InfrastructureStack/MyDatabase/SecurityGroup/from 0.0.0.0_0:{IndirectPort}",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                      "aws:cdk:cloudformation:props": {
                        "ipProtocol": "tcp",
                        "cidrIp": "0.0.0.0/0",
                        "description": "from 0.0.0.0/0:{IndirectPort}",
                        "fromPort": {
                          "Fn::GetAtt": [
                            "MyDatabase1E2517DB",
                            "Endpoint.Port"
                          ]
                        },
                        "groupId": {
                          "Fn::GetAtt": [
                            "MyDatabaseSecurityGroup01753BF2",
                            "GroupId"
                          ]
                        },
                        "toPort": {
                          "Fn::GetAtt": [
                            "MyDatabase1E2517DB",
                            "Endpoint.Port"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "InfrastructureStack/MyDatabase/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::RDS::DBCluster",
                  "aws:cdk:cloudformation:props": {
                    "engine": "aurora-mysql",
                    "databaseName": "ecommerce",
                    "dbClusterParameterGroupName": "default.aurora-mysql5.7",
                    "dbSubnetGroupName": {
                      "Ref": "MyDatabaseSubnetsB4CE3CCD"
                    },
                    "enableHttpEndpoint": true,
                    "engineMode": "serverless",
                    "masterUsername": {
                      "Fn::Join": [
                        "",
                        [
                          "{{resolve:secretsmanager:",
                          {
                            "Ref": "MyDatabaseSecret7865AF39"
                          },
                          ":SecretString:username::}}"
                        ]
                      ]
                    },
                    "masterUserPassword": {
                      "Fn::Join": [
                        "",
                        [
                          "{{resolve:secretsmanager:",
                          {
                            "Ref": "MyDatabaseSecret7865AF39"
                          },
                          ":SecretString:password::}}"
                        ]
                      ]
                    },
                    "storageEncrypted": true,
                    "vpcSecurityGroupIds": [
                      {
                        "Fn::GetAtt": [
                          "MyDatabaseSecurityGroup01753BF2",
                          "GroupId"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "CreateTable": {
            "id": "CreateTable",
            "path": "InfrastructureStack/CreateTable",
            "children": {
              "Provider": {
                "id": "Provider",
                "path": "InfrastructureStack/CreateTable/Provider"
              },
              "CustomResourcePolicy": {
                "id": "CustomResourcePolicy",
                "path": "InfrastructureStack/CreateTable/CustomResourcePolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfrastructureStack/CreateTable/CustomResourcePolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "rds-data:ExecuteStatement",
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "CreateTableCustomResourcePolicy2B2F3559",
                        "roles": [
                          {
                            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "InfrastructureStack/CreateTable/Resource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "InfrastructureStack/CreateTable/Resource/Default"
                  }
                }
              }
            }
          },
          "AWS679f53fac002430cb0da5b7982bd2287": {
            "id": "AWS679f53fac002430cb0da5b7982bd2287",
            "path": "InfrastructureStack/AWS679f53fac002430cb0da5b7982bd2287",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "InfrastructureStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfrastructureStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "InfrastructureStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "InfrastructureStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "secretsmanager:GetSecretValue",
                                    "secretsmanager:DescribeSecret"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Ref": "MyDatabaseSecretAttachment995CA799"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E",
                            "roles": [
                              {
                                "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Code": {
                "id": "Code",
                "path": "InfrastructureStack/AWS679f53fac002430cb0da5b7982bd2287/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "InfrastructureStack/AWS679f53fac002430cb0da5b7982bd2287/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "InfrastructureStack/AWS679f53fac002430cb0da5b7982bd2287/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "InfrastructureStack/AWS679f53fac002430cb0da5b7982bd2287/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      },
                      "s3Key": "4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956.zip"
                    },
                    "handler": "index.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs12.x",
                    "timeout": 120
                  }
                }
              }
            }
          },
          "InsertTable": {
            "id": "InsertTable",
            "path": "InfrastructureStack/InsertTable",
            "children": {
              "Provider": {
                "id": "Provider",
                "path": "InfrastructureStack/InsertTable/Provider"
              },
              "CustomResourcePolicy": {
                "id": "CustomResourcePolicy",
                "path": "InfrastructureStack/InsertTable/CustomResourcePolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfrastructureStack/InsertTable/CustomResourcePolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "rds-data:ExecuteStatement",
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "InsertTableCustomResourcePolicyD51A5FCC",
                        "roles": [
                          {
                            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "InfrastructureStack/InsertTable/Resource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "InfrastructureStack/InsertTable/Resource/Default"
                  }
                }
              }
            }
          },
          "MyCluster": {
            "id": "MyCluster",
            "path": "InfrastructureStack/MyCluster",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "InfrastructureStack/MyCluster/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                  "aws:cdk:cloudformation:props": {}
                }
              }
            }
          },
          "TaskDef": {
            "id": "TaskDef",
            "path": "InfrastructureStack/TaskDef",
            "children": {
              "TaskRole": {
                "id": "TaskRole",
                "path": "InfrastructureStack/TaskDef/TaskRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfrastructureStack/TaskDef/TaskRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "InfrastructureStack/TaskDef/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": {
                          "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:0c7e84de8fbb9af722858c94b48f7aa24bca75d43495da99873a4f9fe1cbe3c0"
                        },
                        "name": "ab-nginx",
                        "portMappings": [
                          {
                            "containerPort": 80,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "TaskDefabnginxLogGroup6911C50F"
                            },
                            "awslogs-stream-prefix": "myNGINX",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        }
                      },
                      {
                        "essential": true,
                        "image": {
                          "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:b48050f68ddb3bcaf14d3d4c84ac1f0bef10749cc4090f7da7acc88464a0f0d3"
                        },
                        "name": "ab-php",
                        "portMappings": [
                          {
                            "containerPort": 9000,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "TaskDefabphpLogGroupFCEECC51"
                            },
                            "awslogs-stream-prefix": "myPHP",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        },
                        "environment": [
                          {
                            "name": "DOMAIN",
                            "value": {
                              "Fn::Join": [
                                "",
                                [
                                  "http://",
                                  {
                                    "Fn::GetAtt": [
                                      "MyFargateServiceLBDE830E97",
                                      "DNSName"
                                    ]
                                  }
                                ]
                              ]
                            }
                          }
                        ],
                        "secrets": [
                          {
                            "name": "SECRETS",
                            "valueFrom": {
                              "Ref": "MyDatabaseSecretAttachment995CA799"
                            }
                          }
                        ]
                      }
                    ],
                    "cpu": "256",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "TaskDefExecutionRoleB4775C97",
                        "Arn"
                      ]
                    },
                    "family": "InfrastructureStackTaskDefC3EAB96E",
                    "memory": "512",
                    "networkMode": "awsvpc",
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "TaskDefTaskRole1EDB4A67",
                        "Arn"
                      ]
                    }
                  }
                }
              },
              "ab-nginx": {
                "id": "ab-nginx",
                "path": "InfrastructureStack/TaskDef/ab-nginx",
                "children": {
                  "AssetImage": {
                    "id": "AssetImage",
                    "path": "InfrastructureStack/TaskDef/ab-nginx/AssetImage",
                    "children": {
                      "Staging": {
                        "id": "Staging",
                        "path": "InfrastructureStack/TaskDef/ab-nginx/AssetImage/Staging"
                      },
                      "Repository": {
                        "id": "Repository",
                        "path": "InfrastructureStack/TaskDef/ab-nginx/AssetImage/Repository"
                      }
                    }
                  },
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "InfrastructureStack/TaskDef/ab-nginx/LogGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "InfrastructureStack/TaskDef/ab-nginx/LogGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                          "aws:cdk:cloudformation:props": {}
                        }
                      }
                    }
                  }
                }
              },
              "ExecutionRole": {
                "id": "ExecutionRole",
                "path": "InfrastructureStack/TaskDef/ExecutionRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfrastructureStack/TaskDef/ExecutionRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "InfrastructureStack/TaskDef/ExecutionRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "InfrastructureStack/TaskDef/ExecutionRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "ecr:BatchCheckLayerAvailability",
                                    "ecr:GetDownloadUrlForLayer",
                                    "ecr:BatchGetImage"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":ecr:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":repository/",
                                        {
                                          "Fn::Sub": "cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}"
                                        }
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "ecr:GetAuthorizationToken",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "TaskDefabnginxLogGroup6911C50F",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "TaskDefabphpLogGroupFCEECC51",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "secretsmanager:GetSecretValue",
                                    "secretsmanager:DescribeSecret"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Ref": "MyDatabaseSecretAttachment995CA799"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "TaskDefExecutionRoleDefaultPolicy0DBB737A",
                            "roles": [
                              {
                                "Ref": "TaskDefExecutionRoleB4775C97"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "ab-php": {
                "id": "ab-php",
                "path": "InfrastructureStack/TaskDef/ab-php",
                "children": {
                  "AssetImage": {
                    "id": "AssetImage",
                    "path": "InfrastructureStack/TaskDef/ab-php/AssetImage",
                    "children": {
                      "Staging": {
                        "id": "Staging",
                        "path": "InfrastructureStack/TaskDef/ab-php/AssetImage/Staging"
                      },
                      "Repository": {
                        "id": "Repository",
                        "path": "InfrastructureStack/TaskDef/ab-php/AssetImage/Repository"
                      }
                    }
                  },
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "InfrastructureStack/TaskDef/ab-php/LogGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "InfrastructureStack/TaskDef/ab-php/LogGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                          "aws:cdk:cloudformation:props": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "MyFargateService": {
            "id": "MyFargateService",
            "path": "InfrastructureStack/MyFargateService",
            "children": {
              "LB": {
                "id": "LB",
                "path": "InfrastructureStack/MyFargateService/LB",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfrastructureStack/MyFargateService/LB/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                      "aws:cdk:cloudformation:props": {
                        "loadBalancerAttributes": [
                          {
                            "key": "deletion_protection.enabled",
                            "value": "false"
                          }
                        ],
                        "scheme": "internet-facing",
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "MyFargateServiceLBSecurityGroup6FBF16F1",
                              "GroupId"
                            ]
                          }
                        ],
                        "subnets": [
                          {
                            "Ref": "MyVpcPublicSubnet1SubnetF6608456"
                          },
                          {
                            "Ref": "MyVpcPublicSubnet2Subnet492B6BFB"
                          }
                        ],
                        "type": "application"
                      }
                    }
                  },
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "InfrastructureStack/MyFargateService/LB/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "InfrastructureStack/MyFargateService/LB/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "Automatically created Security Group for ELB InfrastructureStackMyFargateServiceLBE044D80B",
                            "securityGroupIngress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "ipProtocol": "tcp",
                                "fromPort": 80,
                                "toPort": 80,
                                "description": "Allow from anyone on port 80"
                              }
                            ],
                            "vpcId": {
                              "Ref": "MyVpcF9F0CA6F"
                            }
                          }
                        }
                      },
                      "to InfrastructureStackMyFargateServiceSecurityGroup9341B064:80": {
                        "id": "to InfrastructureStackMyFargateServiceSecurityGroup9341B064:80",
                        "path": "InfrastructureStack/MyFargateService/LB/SecurityGroup/to InfrastructureStackMyFargateServiceSecurityGroup9341B064:80",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupEgress",
                          "aws:cdk:cloudformation:props": {
                            "groupId": {
                              "Fn::GetAtt": [
                                "MyFargateServiceLBSecurityGroup6FBF16F1",
                                "GroupId"
                              ]
                            },
                            "ipProtocol": "tcp",
                            "description": "Load balancer to target",
                            "destinationSecurityGroupId": {
                              "Fn::GetAtt": [
                                "MyFargateServiceSecurityGroup7016792A",
                                "GroupId"
                              ]
                            },
                            "fromPort": 80,
                            "toPort": 80
                          }
                        }
                      }
                    }
                  },
                  "PublicListener": {
                    "id": "PublicListener",
                    "path": "InfrastructureStack/MyFargateService/LB/PublicListener",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "InfrastructureStack/MyFargateService/LB/PublicListener/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                          "aws:cdk:cloudformation:props": {
                            "defaultActions": [
                              {
                                "type": "forward",
                                "targetGroupArn": {
                                  "Ref": "MyFargateServiceLBPublicListenerECSGroup4A3EDF05"
                                }
                              }
                            ],
                            "loadBalancerArn": {
                              "Ref": "MyFargateServiceLBDE830E97"
                            },
                            "port": 80,
                            "protocol": "HTTP"
                          }
                        }
                      },
                      "ECSGroup": {
                        "id": "ECSGroup",
                        "path": "InfrastructureStack/MyFargateService/LB/PublicListener/ECSGroup",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "InfrastructureStack/MyFargateService/LB/PublicListener/ECSGroup/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                              "aws:cdk:cloudformation:props": {
                                "port": 80,
                                "protocol": "HTTP",
                                "targetType": "ip",
                                "vpcId": {
                                  "Ref": "MyVpcF9F0CA6F"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "LoadBalancerDNS": {
                "id": "LoadBalancerDNS",
                "path": "InfrastructureStack/MyFargateService/LoadBalancerDNS"
              },
              "ServiceURL": {
                "id": "ServiceURL",
                "path": "InfrastructureStack/MyFargateService/ServiceURL"
              },
              "Service": {
                "id": "Service",
                "path": "InfrastructureStack/MyFargateService/Service",
                "children": {
                  "Service": {
                    "id": "Service",
                    "path": "InfrastructureStack/MyFargateService/Service/Service",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                      "aws:cdk:cloudformation:props": {
                        "cluster": {
                          "Ref": "MyCluster4C1BA579"
                        },
                        "deploymentConfiguration": {
                          "maximumPercent": 200,
                          "minimumHealthyPercent": 50
                        },
                        "desiredCount": 2,
                        "enableEcsManagedTags": false,
                        "healthCheckGracePeriodSeconds": 60,
                        "launchType": "FARGATE",
                        "loadBalancers": [
                          {
                            "targetGroupArn": {
                              "Ref": "MyFargateServiceLBPublicListenerECSGroup4A3EDF05"
                            },
                            "containerName": "ab-nginx",
                            "containerPort": 80
                          }
                        ],
                        "networkConfiguration": {
                          "awsvpcConfiguration": {
                            "assignPublicIp": "DISABLED",
                            "subnets": [
                              {
                                "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E"
                              },
                              {
                                "Ref": "MyVpcPrivateSubnet2Subnet0040C983"
                              }
                            ],
                            "securityGroups": [
                              {
                                "Fn::GetAtt": [
                                  "MyFargateServiceSecurityGroup7016792A",
                                  "GroupId"
                                ]
                              }
                            ]
                          }
                        },
                        "taskDefinition": {
                          "Ref": "TaskDef54694570"
                        }
                      }
                    }
                  },
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "InfrastructureStack/MyFargateService/Service/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "InfrastructureStack/MyFargateService/Service/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "InfrastructureStack/MyFargateService/Service/SecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "vpcId": {
                              "Ref": "MyVpcF9F0CA6F"
                            }
                          }
                        }
                      },
                      "from InfrastructureStackMyFargateServiceLBSecurityGroupCDF0EBCE:80": {
                        "id": "from InfrastructureStackMyFargateServiceLBSecurityGroupCDF0EBCE:80",
                        "path": "InfrastructureStack/MyFargateService/Service/SecurityGroup/from InfrastructureStackMyFargateServiceLBSecurityGroupCDF0EBCE:80",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                          "aws:cdk:cloudformation:props": {
                            "ipProtocol": "tcp",
                            "description": "Load balancer to target",
                            "fromPort": 80,
                            "groupId": {
                              "Fn::GetAtt": [
                                "MyFargateServiceSecurityGroup7016792A",
                                "GroupId"
                              ]
                            },
                            "sourceSecurityGroupId": {
                              "Fn::GetAtt": [
                                "MyFargateServiceLBSecurityGroup6FBF16F1",
                                "GroupId"
                              ]
                            },
                            "toPort": 80
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "MyDashboard": {
            "id": "MyDashboard",
            "path": "InfrastructureStack/MyDashboard",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "InfrastructureStack/MyDashboard/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudWatch::Dashboard",
                  "aws:cdk:cloudformation:props": {
                    "dashboardBody": {
                      "Fn::Join": [
                        "",
                        [
                          "{\"widgets\":[{\"type\":\"text\",\"width\":6,\"height\":6,\"x\":0,\"y\":0,\"properties\":{\"markdown\":\"# Load Balancer\\nmetrics to monitor load balancer metrics:\\n* Amount of incoming requests\\n* Latency with an alarm if max accepted latency exceeded.\"}},{\"type\":\"metric\",\"width\":9,\"height\":6,\"x\":6,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Requests\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/ApplicationELB\",\"RequestCount\",\"LoadBalancer\",\"",
                          {
                            "Fn::GetAtt": [
                              "MyFargateServiceLBDE830E97",
                              "LoadBalancerFullName"
                            ]
                          },
                          "\",{\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":9,\"height\":6,\"x\":15,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Latency\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/ApplicationELB\",\"TargetResponseTime\",\"LoadBalancer\",\"",
                          {
                            "Fn::GetAtt": [
                              "MyFargateServiceLBDE830E97",
                              "LoadBalancerFullName"
                            ]
                          },
                          "\"]],\"yAxis\":{}}},{\"type\":\"log\",\"width\":24,\"height\":6,\"x\":0,\"y\":6,\"properties\":{\"view\":\"table\",\"title\":\"NGINX Logs\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"query\":\"SOURCE '",
                          {
                            "Ref": "TaskDefabnginxLogGroup6911C50F"
                          },
                          "' | fields @timestamp, @message\"}},{\"type\":\"log\",\"width\":24,\"height\":6,\"x\":0,\"y\":12,\"properties\":{\"view\":\"table\",\"title\":\"PHP Logs\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"query\":\"SOURCE '",
                          {
                            "Ref": "TaskDefabphpLogGroupFCEECC51"
                          },
                          "' | fields @timestamp, @message\"}}]}"
                        ]
                      ]
                    }
                  }
                }
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "InfrastructureStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "InfrastructureStack/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "InfrastructureStack/CDKMetadata/Condition"
              }
            }
          }
        }
      }
    }
  }
}